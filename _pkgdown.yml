url: https://cmu-delphi.github.io/epipredict/

development:
  mode: devel

template:
  light-switch: true
  package: delphidocs

navbar:
  structure:
    left: [intro, workflows, backtesting, reference, articles, news]
    right: [search, github, lightswitch]
  components:
    workflows:
      text: Epiworkflows
      href: articles/custom_epiworkflows.html
    backtesting:
      text: Backtesting
      href: articles/backtesting.html
    articles:
      text: Articles
      menu:
        - text: Using the add/update/remove/adjust functions
          href: articles/update.html
        - text: Using epipredict on non-epidemic panel data
          href: articles/panel-data.html

home:
  links:
    - text: The epiprocess package
      href: https://cmu-delphi.github.io/epiprocess/
  sidebar:
    structure: [links, license, community, citation, authors, dev, related]
    components:
      related:
        title: Delphi packages and resources
        text: |
          * [The epidatr package](https://github.com/cmu-delphi/epidatr/)
          * [The epiprocess package](https://cmu-delphi.github.io/epiprocess/)
          * [The epidatasets package](https://cmu-delphi.github.io/epidatasets/)
          * [Introduction to Delphi's Tooling Work](https://cmu-delphi.github.io/delphi-tooling-book/)

reference:
  - title: Simple forecasters
    desc: Complete forecasters that produce reasonable baselines
    contents:
      - contains("forecaster")
      - contains("classifier")

  - subtitle: Forecaster modifications
    desc: Constructors to modify forecaster arguments and utilities to produce `epi_workflow` objects
    contents:
      - contains("args_list")
      - contains("_epi_workflow")
  ##########################
  - title: Steps and Layers

  - subtitle: Epi recipe preprocessing steps
    desc: >
      Note that any `{recipes}`
      [`step`](https://recipes.tidymodels.org/reference/index.html) is also valid
    contents:
      - starts_with("step_")

  - subtitle: Frosting post-processing layers
    contents:
      - starts_with("layer_")

  ##########################
  - title: Epiworkflows
  - subtitle: Basic forecasting workflow functions
    contents:
      - epi_recipe
      - epi_workflow
      - add_epi_recipe
      - fit.epi_workflow

  - subtitle: Forecast post-processing workflow functions
    desc: Create and apply series of post-processing operations
    contents:
      - frosting
      - ends_with("_frosting")
      - tidy.frosting
      - contains("slather")

  - subtitle: Prediction
    desc: Methods for prediction and modifying predictions
    contents:
      - predict.epi_workflow
      - augment.epi_workflow
      - get_test_data
      - forecast.epi_workflow

  - subtitle: Modifying forecasting epiworkflows
    desc: >
      Modify or inspect an existing recipe, workflow, or frosting. See also [the
      article on the topic](../articles/update.html)
    contents:
      - adjust_epi_recipe
      - Add_model
      - add_layer
      - layer-processors
      - update.layer

  ##########################
  - title: Automatic forecast visualization
    contents:
      - autoplot.epi_workflow
      - autoplot.canned_epipred

  ##########################
  - title: Parsnip engines
    desc: >
      Prediction methods not available in the [general parsnip
      repository](https://www.tidymodels.org/find/parsnip/)
    contents:
      - quantile_reg
      - smooth_quantile_reg
      - grf_quantiles

  ##########################
  - title: Utilities
    contents:
      - flusight_hub_formatter
      - clean_f_name
      - check_enough_data

  - subtitle: Utilities for quantile distribution processing
    contents:
      - dist_quantiles
      - contains("quantile_pred")
      - extrapolate_quantiles
      - nested_quantiles
      - weighted_interval_score
      - starts_with("pivot_quantiles")
