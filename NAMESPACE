# Generated by roxygen2: do not edit by hand

S3method(Add_model,epi_workflow)
S3method(Add_model,workflow)
S3method(Remove_model,epi_workflow)
S3method(Remove_model,workflow)
S3method(Update_model,epi_workflow)
S3method(Update_model,workflow)
S3method(adjust_epi_recipe,epi_recipe)
S3method(adjust_epi_recipe,epi_workflow)
S3method(adjust_frosting,epi_workflow)
S3method(adjust_frosting,frosting)
S3method(apply_frosting,default)
S3method(apply_frosting,epi_workflow)
S3method(augment,epi_workflow)
S3method(autoplot,canned_epipred)
S3method(autoplot,epi_workflow)
S3method(bake,check_enough_data)
S3method(bake,epi_recipe)
S3method(bake,step_adjust_latency)
S3method(bake,step_climate)
S3method(bake,step_epi_YeoJohnson)
S3method(bake,step_epi_ahead)
S3method(bake,step_epi_lag)
S3method(bake,step_epi_slide)
S3method(bake,step_growth_rate)
S3method(bake,step_lag_difference)
S3method(bake,step_population_scaling)
S3method(bake,step_training_window)
S3method(detect_layer,frosting)
S3method(detect_layer,workflow)
S3method(epi_recipe,epi_df)
S3method(epi_recipe,formula)
S3method(extract_argument,epi_workflow)
S3method(extract_argument,frosting)
S3method(extract_argument,layer)
S3method(extract_argument,recipe)
S3method(extract_argument,step)
S3method(extract_frosting,default)
S3method(extract_frosting,epi_workflow)
S3method(extract_layers,frosting)
S3method(extract_layers,workflow)
S3method(extrapolate_quantiles,quantile_pred)
S3method(fit,epi_workflow)
S3method(flusight_hub_formatter,canned_epipred)
S3method(flusight_hub_formatter,data.frame)
S3method(forecast,epi_workflow)
S3method(key_colnames,epi_workflow)
S3method(key_colnames,recipe)
S3method(mean,quantile_pred)
S3method(plot,canned_epipred)
S3method(plot,epi_workflow)
S3method(predict,epi_workflow)
S3method(predict,flatline)
S3method(prep,check_enough_data)
S3method(prep,epi_recipe)
S3method(prep,step_adjust_latency)
S3method(prep,step_climate)
S3method(prep,step_epi_YeoJohnson)
S3method(prep,step_epi_ahead)
S3method(prep,step_epi_lag)
S3method(prep,step_epi_slide)
S3method(prep,step_growth_rate)
S3method(prep,step_lag_difference)
S3method(prep,step_population_scaling)
S3method(prep,step_training_window)
S3method(print,alist)
S3method(print,arx_class)
S3method(print,arx_fcast)
S3method(print,canned_epipred)
S3method(print,cdc_baseline_fcast)
S3method(print,check_enough_data)
S3method(print,climate_fcast)
S3method(print,epi_recipe)
S3method(print,epi_workflow)
S3method(print,flat_fcast)
S3method(print,flatline)
S3method(print,frosting)
S3method(print,layer_add_forecast_date)
S3method(print,layer_add_target_date)
S3method(print,layer_epi_YeoJohnson)
S3method(print,layer_naomit)
S3method(print,layer_point_from_distn)
S3method(print,layer_population_scaling)
S3method(print,layer_predict)
S3method(print,layer_quantile_distn)
S3method(print,layer_residual_quantiles)
S3method(print,layer_threshold)
S3method(print,layer_unnest)
S3method(print,step_adjust_latency)
S3method(print,step_climate)
S3method(print,step_epi_YeoJohnson)
S3method(print,step_epi_ahead)
S3method(print,step_epi_lag)
S3method(print,step_epi_slide)
S3method(print,step_growth_rate)
S3method(print,step_lag_difference)
S3method(print,step_naomit)
S3method(print,step_population_scaling)
S3method(print,step_training_window)
S3method(quantile,quantile_pred)
S3method(refresh_blueprint,default_epi_recipe_blueprint)
S3method(residuals,flatline)
S3method(run_mold,default_epi_recipe_blueprint)
S3method(slather,layer_add_forecast_date)
S3method(slather,layer_add_target_date)
S3method(slather,layer_cdc_flatline_quantiles)
S3method(slather,layer_epi_YeoJohnson)
S3method(slather,layer_naomit)
S3method(slather,layer_point_from_distn)
S3method(slather,layer_population_scaling)
S3method(slather,layer_predict)
S3method(slather,layer_quantile_distn)
S3method(slather,layer_residual_quantiles)
S3method(slather,layer_threshold)
S3method(slather,layer_unnest)
S3method(snap,default)
S3method(snap,quantile_pred)
S3method(tidy,check_enough_data)
S3method(tidy,frosting)
S3method(tidy,layer)
S3method(tidy,step_epi_YeoJohnson)
S3method(update,layer)
S3method(vec_arith,quantile_pred)
S3method(vec_arith.numeric,quantile_pred)
S3method(vec_arith.quantile_pred,numeric)
S3method(vec_math,quantile_pred)
S3method(vec_proxy_equal,quantile_pred)
S3method(weighted_interval_score,quantile_pred)
export("%>%")
export(Add_model)
export(Remove_model)
export(Update_model)
export(add_epi_recipe)
export(add_frosting)
export(add_layer)
export(add_model)
export(adjust_epi_recipe)
export(adjust_frosting)
export(apply_frosting)
export(arx_args_list)
export(arx_class_args_list)
export(arx_class_epi_workflow)
export(arx_classifier)
export(arx_fcast_epi_workflow)
export(arx_forecaster)
export(as_epi_df)
export(as_tibble)
export(autoplot)
export(bake)
export(cdc_baseline_args_list)
export(cdc_baseline_forecaster)
export(check_enough_data)
export(clean_f_name)
export(climate_args_list)
export(climatological_forecaster)
export(default_epi_recipe_blueprint)
export(detect_layer)
export(dist_quantiles)
export(epi_recipe)
export(epi_recipe_blueprint)
export(epi_workflow)
export(extract_argument)
export(extract_frosting)
export(extract_layers)
export(extract_quantile_levels)
export(extrapolate_quantiles)
export(filter)
export(fit)
export(flatline)
export(flatline_args_list)
export(flatline_forecaster)
export(flusight_hub_formatter)
export(forecast)
export(frosting)
export(get_test_data)
export(is_epi_recipe)
export(is_epi_workflow)
export(is_layer)
export(key_colnames)
export(layer)
export(layer_add_forecast_date)
export(layer_add_target_date)
export(layer_cdc_flatline_quantiles)
export(layer_epi_YeoJohnson)
export(layer_naomit)
export(layer_point_from_distn)
export(layer_population_scaling)
export(layer_predict)
export(layer_predictive_distn)
export(layer_quantile_distn)
export(layer_residual_quantiles)
export(layer_threshold)
export(layer_unnest)
export(mutate)
export(nested_quantiles)
export(new_default_epi_recipe_blueprint)
export(new_epi_recipe_blueprint)
export(pivot_longer)
export(pivot_quantiles_longer)
export(pivot_quantiles_wider)
export(pivot_wider)
export(prep)
export(quantile_pred)
export(quantile_reg)
export(rand_id)
export(remove_epi_recipe)
export(remove_frosting)
export(remove_model)
export(rename)
export(select)
export(slather)
export(smooth_quantile_reg)
export(snap)
export(step_adjust_latency)
export(step_climate)
export(step_epi_YeoJohnson)
export(step_epi_ahead)
export(step_epi_lag)
export(step_epi_naomit)
export(step_epi_slide)
export(step_growth_rate)
export(step_lag_difference)
export(step_population_scaling)
export(step_training_window)
export(tibble)
export(tidy)
export(unnest)
export(update_epi_recipe)
export(update_frosting)
export(update_model)
export(validate_layer)
export(weighted_interval_score)
import(epidatasets)
import(epiprocess)
import(parsnip)
import(recipes)
importFrom(checkmate,assert_class)
importFrom(checkmate,assert_numeric)
importFrom(checkmate,test_character)
importFrom(checkmate,test_date)
importFrom(checkmate,test_function)
importFrom(checkmate,test_integerish)
importFrom(checkmate,test_logical)
importFrom(checkmate,test_numeric)
importFrom(checkmate,test_scalar)
importFrom(cli,cli_abort)
importFrom(cli,cli_warn)
importFrom(dplyr,"%>%")
importFrom(dplyr,across)
importFrom(dplyr,all_of)
importFrom(dplyr,any_of)
importFrom(dplyr,arrange)
importFrom(dplyr,bind_cols)
importFrom(dplyr,bind_rows)
importFrom(dplyr,everything)
importFrom(dplyr,filter)
importFrom(dplyr,full_join)
importFrom(dplyr,group_by)
importFrom(dplyr,group_by_at)
importFrom(dplyr,inner_join)
importFrom(dplyr,join_by)
importFrom(dplyr,left_join)
importFrom(dplyr,mutate)
importFrom(dplyr,n)
importFrom(dplyr,pull)
importFrom(dplyr,relocate)
importFrom(dplyr,rename)
importFrom(dplyr,rowwise)
importFrom(dplyr,select)
importFrom(dplyr,summarise)
importFrom(dplyr,summarize)
importFrom(dplyr,tibble)
importFrom(dplyr,tribble)
importFrom(dplyr,ungroup)
importFrom(epiprocess,as_epi_df)
importFrom(epiprocess,epi_slide)
importFrom(epiprocess,growth_rate)
importFrom(epiprocess,growth_rate_params)
importFrom(epiprocess,is_epi_df)
importFrom(epiprocess,key_colnames)
importFrom(generics,augment)
importFrom(generics,fit)
importFrom(generics,forecast)
importFrom(generics,tidy)
importFrom(ggplot2,aes)
importFrom(ggplot2,autoplot)
importFrom(ggplot2,geom_line)
importFrom(ggplot2,geom_linerange)
importFrom(ggplot2,geom_point)
importFrom(ggplot2,geom_ribbon)
importFrom(glue,glue)
importFrom(hardhat,extract_quantile_levels)
importFrom(hardhat,extract_recipe)
importFrom(hardhat,quantile_pred)
importFrom(hardhat,refresh_blueprint)
importFrom(hardhat,run_mold)
importFrom(lifecycle,deprecated)
importFrom(lubridate,"%m-%")
importFrom(lubridate,leap_year)
importFrom(lubridate,month)
importFrom(lubridate,yday)
importFrom(magrittr,"%>%")
importFrom(magrittr,extract2)
importFrom(recipes,bake)
importFrom(recipes,detect_step)
importFrom(recipes,prep)
importFrom(recipes,rand_id)
importFrom(rlang,"!!!")
importFrom(rlang,"!!")
importFrom(rlang,"%@%")
importFrom(rlang,"%||%")
importFrom(rlang,":=")
importFrom(rlang,arg_match)
importFrom(rlang,as_function)
importFrom(rlang,caller_arg)
importFrom(rlang,caller_env)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
importFrom(rlang,expr)
importFrom(rlang,global_env)
importFrom(rlang,inject)
importFrom(rlang,is_empty)
importFrom(rlang,is_logical)
importFrom(rlang,is_null)
importFrom(rlang,is_true)
importFrom(rlang,list2)
importFrom(rlang,set_names)
importFrom(rlang,sym)
importFrom(stats,as.formula)
importFrom(stats,lm)
importFrom(stats,model.frame)
importFrom(stats,na.omit)
importFrom(stats,poly)
importFrom(stats,predict)
importFrom(stats,quantile)
importFrom(stats,residuals)
importFrom(tibble,as_tibble)
importFrom(tibble,tibble)
importFrom(tidyr,crossing)
importFrom(tidyr,drop_na)
importFrom(tidyr,expand_grid)
importFrom(tidyr,fill)
importFrom(tidyr,pivot_longer)
importFrom(tidyr,pivot_wider)
importFrom(tidyr,unnest)
importFrom(tidyselect,all_of)
importFrom(utils,capture.output)
importFrom(vctrs,as_list_of)
importFrom(vctrs,new_vctr)
importFrom(vctrs,vec_arith)
importFrom(vctrs,vec_arith.numeric)
importFrom(vctrs,vec_cast)
importFrom(vctrs,vec_math)
importFrom(vctrs,vec_proxy_equal)
importFrom(vctrs,vec_recycle_common)
importFrom(workflows,extract_preprocessor)
