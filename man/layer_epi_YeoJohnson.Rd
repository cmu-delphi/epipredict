% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_yeo_johnson.R
\name{layer_epi_YeoJohnson}
\alias{layer_epi_YeoJohnson}
\title{Unormalizing transformation}
\usage{
layer_epi_YeoJohnson(
  frosting,
  ...,
  lambdas = NULL,
  by = NULL,
  id = rand_id("epi_YeoJohnson")
)
}
\arguments{
\item{frosting}{a \code{frosting} postprocessor. The layer will be added to the
sequence of operations for this frosting.}

\item{...}{One or more selector functions to scale variables
for this step. See \code{\link[recipes:selections]{recipes::selections()}} for more details.}

\item{lambdas}{Internal. A data frame of lambda values to be used for
inverting the transformation.}

\item{by}{A (possibly named) character vector of variables to join by.}

\item{id}{a random id string}
}
\value{
an updated \code{frosting} postprocessor
}
\description{
Will undo a step_epi_YeoJohnson transformation.
}
\examples{
library(dplyr)
jhu <- epidatasets::cases_deaths_subset \%>\%
  filter(time_value > "2021-11-01", geo_value \%in\% c("ca", "ny")) \%>\%
  select(geo_value, time_value, cases)

# Create a recipe with a Yeo-Johnson transformation.
r <- epi_recipe(jhu) \%>\%
  step_epi_YeoJohnson(cases) \%>\%
  step_epi_lag(cases, lag = 0) \%>\%
  step_epi_ahead(cases, ahead = 0, role = "outcome") \%>\%
  step_epi_naomit()

# Create a frosting layer that will undo the Yeo-Johnson transformation.
f <- frosting() \%>\%
  layer_predict() \%>\%
  layer_epi_YeoJohnson(.pred)

# Create a workflow and fit it.
wf <- epi_workflow(r, linear_reg()) \%>\%
  fit(jhu) \%>\%
  add_frosting(f)

# Forecast the workflow, which should reverse the Yeo-Johnson transformation.
forecast(wf)
# Compare to the original data.
jhu \%>\% filter(time_value == "2021-12-31")
forecast(wf)
}
