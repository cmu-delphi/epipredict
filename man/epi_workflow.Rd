% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_workflow.R
\name{epi_workflow}
\alias{epi_workflow}
\title{Create an epi_workflow}
\usage{
epi_workflow(preprocessor = NULL, spec = NULL, postprocessor = NULL)
}
\arguments{
\item{preprocessor}{An optional preprocessor to add to the workflow. One of:
\itemize{
\item A formula, passed on to \code{\link[workflows:add_formula]{add_formula()}}.
\item A recipe, passed on to \code{\link[workflows:add_recipe]{add_recipe()}}.
\item A \code{\link[workflows:workflow_variables]{workflow_variables()}} object, passed on to \code{\link[workflows:add_variables]{add_variables()}}.
}}

\item{spec}{An optional parsnip model specification to add to the workflow.
Passed on to \code{\link[workflows:add_model]{add_model()}}.}

\item{postprocessor}{An optional postprocessor to add to the workflow.
Currently only \code{frosting} is allowed using, \code{add_frosting()}.}
}
\value{
A new \code{epi_workflow} object.
}
\description{
This is a container object that unifies preprocessing, fitting, prediction,
and post-processing for predictive modeling on epidemiological data. It extends
the functionality of a \code{\link[workflows:workflow]{workflows::workflow()}} to handle the typical panel
data structures found in this field. This extension is handled completely
internally, and should be invisible to the user. For all intents and purposes,
this operates exactly like a \code{\link[workflows:workflow]{workflows::workflow()}}. For more details
and numerous examples, see there.
}
\examples{
jhu <- covid_case_death_rates

r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7) \%>\%
  step_epi_lag(case_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_naomit()

wf <- epi_workflow(r, parsnip::linear_reg())

wf
}
\seealso{
workflows::workflow
}
