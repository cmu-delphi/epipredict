% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flusight_hub_formatter.R
\name{flusight_hub_formatter}
\alias{flusight_hub_formatter}
\title{Format predictions for submission to FluSight forecast Hub}
\usage{
flusight_hub_formatter(object, ..., .fcast_period = c("daily", "weekly"))
}
\arguments{
\item{object}{a data.frame of predictions or an object of class
\code{canned_epipred} as created by, e.g., \code{\link[=arx_forecaster]{arx_forecaster()}}}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Name = value pairs of constant
columns (or mutations) to perform to the results. See examples.}

\item{.fcast_period}{Control whether the \code{horizon} should represent days or
weeks. Depending on whether the forecaster output has target dates
from \code{\link[=layer_add_target_date]{layer_add_target_date()}} or not, we may need to compute the horizon
and/or the \code{target_end_date} from the other available columns in the predictions.
When both \code{ahead} and \code{target_date} are available, this is ignored. If only
\code{ahead} or \code{aheads} exists, then the target date may need to be multiplied
if the \code{ahead} represents weekly forecasts. Alternatively, if only, the
\code{target_date} is available, then the \code{horizon} will be in days, unless
this argument is \code{"weekly"}. Note that these can be adjusted later by the
\code{...} argument.}
}
\value{
A \link[tibble:tibble]{tibble::tibble}. If \code{...} is empty, the result will contain the
columns \code{reference_date}, \code{horizon}, \code{target_end_date}, \code{location},
\code{output_type_id}, and \code{value}. The \code{...} can perform mutations on any of
these.
}
\description{
This function converts predictions from any of the included forecasters into
a format (nearly) ready for submission to the 2023-24
\href{https://github.com/cdcepi/FluSight-forecast-hub}{FluSight-forecast-hub}.
See there for documentation of the required columns. Currently, only
"quantile" forcasts are supported, but the intention is to support both
"quantile" and "pmf". For this reason, adding the \code{output_type} column should
be done via the \code{...} argument. See the examples below. The specific required
format for this forecast task is \href{https://github.com/cdcepi/FluSight-forecast-hub/blob/main/model-output/README.md}{here}.
}
\examples{
library(dplyr)
library(epiprocess)
weekly_deaths <- covid_case_death_rates \%>\%
  filter(
    time_value >= as.Date("2021-09-01"),
    geo_value \%in\% c("ca", "ny", "dc", "ga", "vt")
  ) \%>\%
  select(geo_value, time_value, death_rate) \%>\%
  left_join(state_census \%>\% select(pop, abbr), by = c("geo_value" = "abbr")) \%>\%
  mutate(deaths = pmax(death_rate / 1e5 * pop * 7, 0)) \%>\%
  select(-pop, -death_rate) \%>\%
  group_by(geo_value) \%>\%
  epi_slide(~ sum(.$deaths), .window_size = 7, .new_col_name = "deaths_7dsum") \%>\%
  ungroup() \%>\%
  filter(weekdays(time_value) == "Saturday")

cdc <- cdc_baseline_forecaster(weekly_deaths, "deaths_7dsum")
flusight_hub_formatter(cdc)
flusight_hub_formatter(cdc, target = "wk inc covid deaths")
flusight_hub_formatter(cdc, target = paste(horizon, "wk inc covid deaths"))
flusight_hub_formatter(cdc, target = "wk inc covid deaths", output_type = "quantile")
}
