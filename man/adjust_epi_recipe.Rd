% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_recipe.R
\name{adjust_epi_recipe}
\alias{adjust_epi_recipe}
\alias{adjust_epi_recipe.epi_workflow}
\alias{adjust_epi_recipe.epi_recipe}
\title{Adjust a step in an \code{epi_workflow} or \code{epi_recipe}}
\usage{
adjust_epi_recipe(
  x,
  which_step,
  ...,
  blueprint = default_epi_recipe_blueprint()
)

\method{adjust_epi_recipe}{epi_workflow}(
  x,
  which_step,
  ...,
  blueprint = default_epi_recipe_blueprint()
)

\method{adjust_epi_recipe}{epi_recipe}(
  x,
  which_step,
  ...,
  blueprint = default_epi_recipe_blueprint()
)
}
\arguments{
\item{x}{A \code{epi_workflow} or \code{epi_recipe} object}

\item{which_step}{the number or name of the step to adjust}

\item{...}{Used to input a parameter adjustment}

\item{blueprint}{A hardhat blueprint used for fine tuning the preprocessing.}
}
\value{
\code{x}, updated with the adjustment to the specified \code{epi_recipe} step.
}
\description{
Make a parameter adjustment to a step in either an
\code{epi_workflow} or \code{epi_recipe} object.
}
\details{
This function can either adjust a step in a \code{epi_recipe} object
or a step from a \code{epi_recipe} object in an \code{epi_workflow}. The step to be
adjusted is indicated by either the step number or name (if a name is used,
it must be unique). In either case, the argument name and update value
must be inputted as \code{...}. See the examples below for brief
illustrations of the different types of updates.
}
\examples{
library(workflows)

jhu <- covid_case_death_rates \%>\%
  filter(time_value > "2021-11-01", geo_value \%in\% c("ak", "ca", "ny"))
r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7) \%>\%
  step_epi_naomit()

wf <- epi_workflow(r, parsnip::linear_reg()) \%>\% fit(jhu)
latest <- jhu \%>\%
  filter(time_value >= max(time_value) - 14)

# Adjust `step_epi_ahead` to have an ahead value of 14
# in the `epi_workflow`
# Option 1. Using the step number:
wf2 <- wf \%>\% adjust_epi_recipe(which_step = 2, ahead = 14)
extract_preprocessor(wf2)
# Option 2. Using the step name:
wf3 <- wf \%>\% adjust_epi_recipe(which_step = "step_epi_ahead", ahead = 14)
extract_preprocessor(wf3)

# Adjust `step_epi_ahead` to have an ahead value of 14
# in the `epi_recipe`
# Option 1. Using the step number
r2 <- r \%>\% adjust_epi_recipe(which_step = 2, ahead = 14)
r2
# Option 2. Using the step name
r3 <- r \%>\% adjust_epi_recipe(which_step = "step_epi_ahead", ahead = 14)
r3

}
