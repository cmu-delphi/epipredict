% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_pivot_wider.R
\name{step_pivot_wider}
\alias{step_pivot_wider}
\title{Create new variables by pivotting data}
\usage{
step_pivot_wider(
  recipe,
  ...,
  names_from = "geo_value",
  role = "predictor",
  id_cols = "time_value",
  id_expand = FALSE,
  values_fill = NA,
  values_fn = NULL,
  skip = FALSE,
  id = rand_id("pivot_wider")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{<\code{\link[=tidyr_tidy_select]{tidy-select}}> One or more selector
functions to choose variables
values to pivot. These are the \code{values_from} argument for \code{\link[tidyr:pivot_wider]{tidyr::pivot_wider()}}.
See \code{\link[recipes:selections]{recipes::selections()}} for more details.}

\item{names_from}{A selector function to choose which column (or columns) to
get the name of the output columns from. This is typically \code{geo_value}
(the default), and possibly any additional keys in the training data.}

\item{role}{For model terms created by this step, what analysis role should
they be assigned? \code{lag} is default a predictor while \code{ahead} is an outcome.}

\item{id_cols}{<\code{\link[=tidyr_tidy_select]{tidy-select}}> A selector function
providing a set of columns that uniquely identifies each observation.
The typical use is for this to be \code{time_value} and any additional keys
not selected by \code{names_from} (this is the default behaviour).}

\item{id_expand}{Should the values in the \code{id_cols} columns be expanded by
\code{\link[tidyr:expand]{expand()}} before pivoting? This results in more rows, the output will
contain a complete expansion of all possible values in \code{id_cols}. Implicit
factor levels that aren't represented in the data will become explicit.
Additionally, the row values corresponding to the expanded \code{id_cols} will
be sorted.}

\item{values_fill}{Optionally, a (scalar) value that specifies what each
\code{value} should be filled in with when missing.

This can be a named list if you want to apply different fill values to
different value columns.}

\item{values_fn}{Optionally, a function applied to the value in each cell
in the output. You will typically use this when the combination of
\code{id_cols} and \code{names_from} columns does not uniquely identify an
observation.

This can be a named list if you want to apply different aggregations
to different \code{values_from} columns.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[=bake]{bake()}}? While all operations are baked
when \code{\link[=prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A unique identifier for the step}
}
\value{
An updated version of \code{recipe} with the new step added to the
sequence of any existing operations.
}
\description{
Create new variables by pivotting data
}
\examples{
jhu <- case_death_rate_subset \%>\%
  filter(geo_value \%in\% c("ca", "ny", "pa"), time_value > "2021-12-01")
r <- epi_recipe(jhu)

r1 <- r \%>\% step_pivot_wider("death_rate")
bake(prep(r1, jhu), new_data = NULL)

r2 <- r \%>\% step_pivot_wider(dplyr::ends_with("rate"))
bake(prep(r2, jhu), new_data = NULL)
}
