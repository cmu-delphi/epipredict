% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy.R
\name{tidy.frosting}
\alias{tidy.frosting}
\title{Tidy the result of a frosting object}
\usage{
\method{tidy}{frosting}(x, number = NA, id = NA, ...)
}
\arguments{
\item{x}{A \code{frosting} or \code{layer} object}

\item{number}{An integer or \code{NA}. If missing, and \code{id} is not provided,
the return value is a list of the operations in the frosting.
If a number is given, a \code{tidy} method is executed for that operation
in the frosting (if it exists). \code{number} must not be provided if
\code{id} is.}

\item{id}{A character string or \code{NA}. If missing and \code{number} is not provided,
the return value is a list of the operations in the frosting.
If a character string is given, a \code{tidy} method is executed for that
operation in the frosting (if it exists). \code{id} must not be provided
if \code{number} is.}

\item{...}{Not currently used.}
}
\value{
A tibble with columns that vary depending on what
\code{tidy} method is executed. When \code{number}, and \code{id} are \code{NA}, a
tibble with columns \code{number} (the operation iteration),
\code{operation} ("layer"),
\code{type} (the method, e.g. "predict", "naomit"), and a character column \code{id}.
}
\description{
\code{tidy} will return a data frame that contains information
regarding a frosting or operation within the frosting (when a \code{tidy}
method for the operation exists). Note that this is a modified
version of the \code{tidy} method for a recipe.
}
\examples{
jhu <- covid_case_death_rates \%>\%
  filter(time_value > "2021-11-01", geo_value \%in\% c("ak", "ca", "ny"))

r <- epi_recipe(jhu) \%>\%
  step_epi_lag(death_rate, lag = c(0, 7, 14)) \%>\%
  step_epi_ahead(death_rate, ahead = 7) \%>\%
  step_epi_naomit()

wf <- epi_workflow(r, parsnip::linear_reg()) \%>\% fit(jhu)
latest <- get_test_data(recipe = r, x = jhu)

f <- frosting() \%>\%
  layer_predict() \%>\%
  layer_naomit(.pred)

tidy(f)

}
